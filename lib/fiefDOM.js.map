{"version":3,"sources":["webpack:///webpack/bootstrap eed4e1bc27557290bc29","webpack:///./lib/main.js","webpack:///./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;AC3BA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB,EAAE;AAChD,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA","file":"fiefDOM.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap eed4e1bc27557290bc29","import DOMNodeCollection from './dom_node_collection.js';\n\nconst collectionFromElement = (element) => (\n  new DOMNodeCollection([element])\n);\n\nconst collectionFromArray = (array) => (\n  new DOMNodeCollection(array)\n);\n\nconst collectionFromSelector = (selector) => {\n  const selection = document.querySelectorAll(selector);\n  const nodeList = Array.from(selection);\n  return collectionFromArray(nodeList);\n};\n\n\nconst $l = (arg) => {\n  if (arg instanceof HTMLElement) {\n    return collectionFromElement(arg);\n  } else if (arg instanceof Array) {\n    return collectionFromArray(arg);\n  } else {\n    return collectionFromSelector(arg);\n  }\n};\n\nwindow.$l = $l;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 0\n// module chunks = 0","class DOMNodeCollection {\n  constructor(HTMLelements) {\n    this.HTMLelements = HTMLelements;\n  }\n\n  each(callback) {\n    this.HTMLelements.forEach(callback);\n  }\n\n  html(string) {\n    if (string !== undefined) {\n      this.each(el => { el.innerHTML = string; });\n    } else {\n      return this.HTMLelements[0].innerHTML;\n    }\n  }\n\n  empty() {\n    this.html(\"\");\n  }\n\n  append(potpurri) {\n    if (typeof potpurri === \"string\") {\n      this.appendAttach(potpurri);\n    } else if (potpurri instanceof HTMLElement) {\n      this.appendAttach(potpurri.outerHTML);\n    } else if (potpurri instanceof DOMNodeCollection) {\n      potpurri.each(newEl => this.appendAttach(newEl.outerHTML));\n    }\n  }\n\n  appendAttach(content) {\n    this.each(el => el.insertAdjacentHTML('beforeend', content));\n  }\n\n  attr(attribute, value) {\n    if (typeof value === 'string') {\n      this.each(el => el.setAttribute(attribute, value));\n    } else {\n      return this.HTMLelements[0].innerHTML;\n    }\n  }\n\n  addClass(newClass) {\n    this.each((el) => {\n      if (!el.classList.contains(newClass)) {\n        el.classList.add(newClass);\n      }\n    });\n  }\n\n  removeClass(targetClass) {\n    this.each((el) => el.classList.remove(targetClass));\n  }\n\n  children() {\n    let childrenElements = [];\n\n    this.each(el => {\n      const elChildren = Array.from(el.children);\n      childrenElements = childrenElements.concat(elChildren);\n    });\n\n    return new DOMNodeCollection(childrenElements);\n  }\n\n  parent() {\n    let parentsArray = [];\n    this.each(el => {\n      let parentEl = el.parentElement;\n      if (!parentsArray.includes(parentEl)) {\n        parentsArray.push(el.parentElement);\n      }\n    });\n\n    return new DOMNodeCollection(parentsArray);\n  }\n\n  find(selector) {\n    let foundNodes = [];\n\n    this.each(el => {\n      let elFoundNodes = Array.from(el.querySelectorAll(selector));\n\n      elFoundNodes.each((node) => {\n        if (!foundNodes.includes(node)) {\n          foundNodes.push(node);\n        }\n      });\n    });\n\n    return new DOMNodeCollection(foundNodes);\n  }\n\n  remove(selector) {\n    let targetNodes = this.find(selector);\n\n    targetNodes.each(el => {\n      let targetParent = el.parentElement;\n      targetParent.removeChild(el);\n    });\n  }\n}\n\nexport default DOMNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}